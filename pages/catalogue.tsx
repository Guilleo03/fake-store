import { useState, useEffect } from "react";
import { useStore } from "./../store";
import Head from "next/head";
import { getAllProducts, getAllCategories } from "@utils/api";
import { Product, Category } from "@utils/types";

import Layout from "@components/layout";
import CategoryFilter from "@components/categoryFilter";
import Catalogue from "@components/catalogue";
import PriceSort from "@components/priceSort";

import { useSession } from "next-auth/react";
import Router from "next/router";

type Props = {
  products: Product[];
  categories: Category[];
};

export default function Home({ products, categories }: Props) {
  const { catalogue, defaultCatalogue } = useStore();
  useEffect(() => {
    defaultCatalogue(products);
  }, [products]);

  const { status } = useSession();

  useEffect(() => {
    if (status === "unauthenticated") Router.replace("/index");
  }, [status]);

  return (
    <>
      <Head>
        <title>Fake store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container">
          <Layout>
            <div className="filters">
              <CategoryFilter categories={categories} />
              <PriceSort />
            </div>
            <Catalogue products={catalogue} />
          </Layout>
        </div>
      </main>
    </>
  );
}

export const getStaticProps = async () => {
  const [products, categories] = await Promise.all([
    getAllProducts().then((data) => data),
    getAllCategories().then((data) => data),
  ]);

  return {
    props: {
      products,
      categories,
    },
  };
};
